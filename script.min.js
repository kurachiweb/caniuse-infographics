"use strict";const dataToGraph=(targetNode,dataset,title="",option={})=>{const width=400,height=300,outRadius=Math.min(400,300)/2-10,inRadius=.4*outRadius,scale=d3.scaleLinear().domain([0,d3.sum(dataset,eachData=>eachData.value)]).range([0,100]),docFlag=document.createDocumentFragment(),svg=d3.select(docFlag).append("svg").attr("version","1.1").attr("viewBox","0 0 400 300").attr("fill-opacity",.1),partWrap=svg.append("g").attr("class","partWrap").attr("transform","translate(200, 150)"),labelWrap=svg.append("g").attr("class","labelWrap").attr("transform","translate(200, 150)");if(option.sort&&dataset.sort((a,b)=>b.value-a.value),option.maxToOther){let otherSum=0;dataset.forEach((eachDate,i,arr)=>{eachDate.value<=option.maxToOther&&(arr[i]=null,otherSum+=eachDate.value)}),otherSum&&dataset.push({name:"その他",value:otherSum})}else if(option.showLength&&option.sort){let otherSum=0;dataset.forEach((eachDate,i,arr)=>{i>=option.showLength&&(arr[i]=null,otherSum+=eachDate.value)}),otherSum&&dataset.push({name:"その他",value:otherSum})}dataset=dataset.filter(d=>null!=d);const colorArr=["#0048b3","#008033","#ad0000","#a68608","#80195a"],colorScheme=d3.scaleOrdinal().range(colorArr),dFormat=d3.pie().value(d=>scale(d.value)).sort(null),genDValue=d3.arc().outerRadius(outRadius).innerRadius(inRadius);partWrap.selectAll(".graph_part").data(dFormat(dataset)).enter().append("path").attr("d",genDValue).attr("fill",(d,i,arr)=>i+1===arr.length&&(i+1)%colorArr.length==1?colorScheme(1):colorScheme(i)).attr("stroke","none").attr("class","graph_part");const getCenterPos=d3.arc().outerRadius((outRadius+inRadius)/2).innerRadius((outRadius+inRadius)/2);labelWrap.selectAll(".graph_label").data(dFormat(dataset)).enter().append("text").attr("fill","black").attr("transform",d=>"translate("+getCenterPos.centroid(d)+")").attr("dy","3px").attr("font-size","12px").attr("fill","#dfdfdf").attr("text-anchor","middle").attr("class","graph_label").text(d=>{const round=(num,decimalLen)=>{const decimalSplit=(num+"").split(".");return 1!==decimalSplit.length&&decimalSplit[1].length>decimalLen?+num.toFixed(decimalLen):+num};return`${d.data.name} (${round(scale(d.data.value),3)}%)`}),title&&targetNode.append("figcaption").text(title),targetNode.node().appendChild(docFlag),svg.transition().duration(1500).ease(d3.easeCircleOut).attr("fill-opacity",1)},report={};fetch(new Request("caniuse.json")).then(res=>res.json()).then(data=>{console.log("Can I Useのデータ",data),report.browser={};const browserShareDataset=[];for(let browserID in data.agents){const agentObj=data.agents[browserID];let usageSum=0;for(let eachVersion in agentObj.usage_global)usageSum+=agentObj.usage_global[eachVersion];const versions=agentObj.versions.filter(d=>d);report.browser[browserID]={formalName:agentObj.browser,latest:versions[versions.length-1],usage:usageSum,compatCount:{y:0,a:0,n:0,u:0}},browserShareDataset.push({name:agentObj.browser,value:usageSum})}dataToGraph(d3.select(".browser_share"),browserShareDataset,"",{showLength:5,sort:!0});const categoryArr=Object.keys(data.cats).sort(),subCatArr=categoryArr.map(eachCat=>{const returnArr=[];for(let eachSubCat of data.cats[eachCat])returnArr.push(eachSubCat);return returnArr}).flat();report.categories=Object.fromEntries(subCatArr.map(d=>[d,[]]));for(let eachID in data.data){const categories=data.data[eachID].categories;for(let eachCat of categories)report.categories[eachCat].push(eachID)}const defaultCat="HTML5",selectCatInput=d3.select(".options").append("label").attr("class","selectCat").text("カテゴリーを選択").append("select").attr("class","selectCatInput");categoryArr.forEach(eachCat=>{const eachOptG=selectCatInput.append("optgroup").attr("label",eachCat);data.cats[eachCat].forEach(eachSubCat=>{const subCatElem=eachOptG.append("option").text(eachSubCat);"HTML5"===eachSubCat&&subCatElem.attr("selected","true")})});const compatStatsLabel={y:"対応",a:"一部対応",n:"非対応",u:"不明"},changeStatGraph=(opt={})=>{const val=opt.value||d3.event.target.value,fnArr=report.categories[val],browserReport=report.browser,outputWrap=d3.select(".compat_rate_wrap");for(let browserID in browserReport){const compatCount=browserReport[browserID].compatCount;for(let eachCompat in compatCount)compatCount[eachCompat]=0}fnArr.map(fnID=>{const fnObj=data.data[fnID],stats=fnObj.stats;for(let browserID in stats){const latest=browserReport[browserID].latest;let compatStat=stats[browserID][latest];const compatCount=browserReport[browserID].compatCount;"p"===compatStat[0]&&(compatStat="n"),compatCount[compatStat[0]]++}}),d3.select(".func_category").text(`カテゴリー「${val}」のブラウザ対応率(全${fnArr.length}項目中)`),outputWrap.selectAll("*").remove();for(let browserID in browserReport){const dataset=[],compatCount=browserReport[browserID].compatCount;for(let eachCompat in compatCount){const compatFlag=eachCompat[0];dataset.push({name:compatStatsLabel[compatFlag],value:compatCount[compatFlag]})}const graphElem=outputWrap.append("figure").attr("class","graph compat_rate"),title=data.agents[browserID].browser+"の対応率";dataToGraph(graphElem,dataset,title)}};selectCatInput.on("change",changeStatGraph),changeStatGraph({value:"HTML5"});const lastModify=new Date(1e3*data.updated),JPDateFormat=new Intl.DateTimeFormat("ja-JP",{year:"numeric",month:"narrow",day:"numeric"});d3.select(".last_modify").attr("datetime",lastModify.toISOString()).text("JSONデータ更新日：").append("time").text(JPDateFormat.format(lastModify))}).catch(e=>{console.error("データ取得に失敗しました。",e)});